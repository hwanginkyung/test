pipeline {
    agent any

    environment {
        ECR_CREDENTIALS = credentials('test') // Jenkins Credential에서 설정한 ECR 액세스 키와 시크릿 키
        ECR_REGISTRY = '970210524130.dkr.ecr.us-east-1.amazonaws.com'
        IMAGE_NAME = 'image-test'
    }


    stages {
        stage('Check Disk Space') {
            steps {
                script {
                    def freeSpace = sh(script: 'df -h /', returnStatus: true).trim()
                    echo "Free disk space:\n${freeSpace}"

                    // 여유 공간이 어느 정도 이하일 때 특정 작업 수행
                    if (freeSpace.contains('100MB')) {
                        // 디스크 여유 공간이 부족할 때 수행할 작업 추가
                        echo "Disk space is below the threshold. Taking necessary actions..."
                        sh "sudo rm -f /var/log/*.log"
                        // 여기에 필요한 작업 추가
                    } else {
                        echo "Disk space is sufficient."
                    }
                }
            }
        }
        stage('Docker Cleanup') {
            steps {
                script {
                    // docker system prune
                    sh 'docker system prune --force'

                    // docker volume prune
                    sh 'docker volume prune --force'

                    // docker volume ls
                    sh 'docker volume ls'

                    // docker system df
                    sh 'docker system df'
                }
            }

        stage('Build and Push Docker Image') {
            steps {
                script {
                     checkout scm
                    // Docker 빌드 및 이미지 태깅
                     sh 'rm  ~/.dockercfg || true'
                     sh 'rm ~/.docker/config.json || true'
                     docker.withRegistry(env.ECR_REGISTRY, 'ecr:us-east-1', credentialsId: env.ECR_CREDENTIALS) {
                        def customImage = docker.build("env.ECR_REGISTRY/hik_test", "--no-cache")
                        customImage.push("${env.BUILD_NUMBER}")
                        customImage.push("latest")
                    }
                }
            }
        }
    }
}
