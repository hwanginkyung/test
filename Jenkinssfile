pipeline {
    agent any
    environment {
        DOCKERHUB = 'hinkyung/pythons'
        DOCKERHUBCREDENTIAL = 'docker_cre'

        ECR_CREDENTIALS = credentials('test') // Jenkins Credential에서 설정한 ECR 액세스 키와 시크릿 키
        ECR_REGISTRY = '970210524130.dkr.ecr.us-east-1.amazonaws.com'
        IMAGE_NAME = 'image-test'
    }
    stages {
        stage('Clone repository') {
            steps {
                script {
                     checkout scm
     }
}
}
        stage('image build') {
            steps {
                script {
                    
                    sh "docker build -t ${DOCKERHUB}:${currentBuild.number} ."
                    sh "docker build -t ${DOCKERHUB}:latest ."
                }
            }
        }
        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh 'rm  ~/.dockercfg || true'
                    sh 'rm ~/.docker/config.json || true'
                    // Docker Hub에 푸시
                    docker.withRegistry('https://index.docker.io/v1/', DOCKERHUBCREDENTIAL) {
                        def customImage = docker.build("${DOCKERHUB}:${currentBuild.number}")
                        customImage.push()
                        customImage.push('latest')
                    }

                    // ECR에 푸시
                    docker.withRegistry('https://${ECR_REGISTRY}', 'ecr:us-east-1', credentialsId: ECR_CREDENTIALS) {
                        def customImage = docker.build("${ECR_REGISTRY}/${IMAGE_NAME}:${currentBuild.number}")
                        customImage.push()
                        customImage.push('latest')
                    }
                }
            }
        }
    }
}
